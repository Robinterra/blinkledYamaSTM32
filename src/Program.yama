namespace "Program"
{
    using "System";
    using "System.IO";
    using "System.Time";
    using "ARM.CortexM";
    using "ARM.CortexM.Advanced";

    public class ProgramTest
    {

        #region get/set

        private GpioPin PinArt;

        #endregion get/set

        static bool Init()
        {
            Gpio port = IORegister.PortA (  );
            Gpio portC = IORegister.PortC (  );
            AnalogToDigitalConverter adc1 = IORegister.Adc1 (  );
            ResetAndClockControl rcc = IORegister.Rcc (  );

            rcc.EnableAdc1 (  );
            adc1.Init (  );

            port.InitPort ( 1, IORegisterMode.Analog );

            port.InitPort ( 2, IORegisterMode.Write );
            port.InitPort ( 3, IORegisterMode.Write );
            port.InitPort ( 4, IORegisterMode.Write );
            port.InitPort ( 5, IORegisterMode.Write );
            port.InitPort ( 6, IORegisterMode.Write );
            port.InitPort ( 7, IORegisterMode.Write );

            portC.InitPort ( 4, IORegisterMode.Write );
        }

        static SegmentDisplay GetSgmentDisplay()
        {
            Gpio port = IORegister.PortA (  );
            Gpio portC = IORegister.PortC (  );

            GpioPin pinBr = new GpioPin(port, 2);
            GpioPin pinB = new GpioPin(port, 3);
            GpioPin pinBl = new GpioPin(port, 4);

            GpioPin pinM = new GpioPin(port, 5);

            GpioPin pinTl = new GpioPin(port, 6);
            GpioPin pinT = new GpioPin(port, 7);
            GpioPin pinTr = new GpioPin(portC, 4);

            new SegmentDisplay ( pinBr, pinB, pinBl, pinM, pinTr, pinT, pinTl );
        }

        static int main (  )
        {
            ProgramTest.Init();

            AnalogToDigitalConverter adc1 = IORegister.Adc1 (  );

            SegmentDisplay display = ProgramTest.GetSgmentDisplay();

            while (true)
            {
                int value = adc1.Read ( 1 );

                value = value / 24;

                value = value + 0xBC;

                display.Write ( value & 0xf );

                /*for (int i = 0; i <= 0xf; i = i + 1)
                {
                    display.Write ( i );

                    Wait.InSeconds ( 1 );
                }*/

                Wait.InSeconds ( 1 );
            }

            return 0;
        }

        #region ctor

        public this new (GpioPin pin)
        {
            this.PinArt = pin;

            return this;
        }

        public this ~()
        {

        }

        #endregion ctor

        #region methods

        public bool An()
        {
            this.PinArt.Write ( IOValue.High );
        }
        public bool Aus()
        {
            this.PinArt.Write ( IOValue.Low );
        }

        #endregion methods

    }

}