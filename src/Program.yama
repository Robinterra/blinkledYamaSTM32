namespace "Program"
{
    using "System";
    using "System.IO";
    using "System.Time";
    using "ARM.CortexM";
    using "ARM.CortexM.Advanced";

    public static class ProgramTest
    {

        #region get/set

        private GpioPin PinArt;

        #endregion get/set

        private static bool Init (  )
        {
            Gpio port = IORegister.PortA (  );
            Gpio portc = IORegister.PortC (  );
            AnalogToDigitalConverter adc1 = IORegister.Adc1 (  );
            ResetAndClockControl rcc = IORegister.Rcc (  );

            rcc.EnableGpioPorts ( 0xf );
            rcc.EnableAdc1 (  );
            adc1.Init (  );

            port.InitPort ( 5, IORegisterMode.Write );
            portc.InitPort ( 13, IORegisterMode.Read );
            port.InitPort ( 1, IORegisterMode.Analog );
        }

        static int main (  )
        {
            ProgramTest.Init (  );

            Gpio port = IORegister.PortA (  );
            Gpio portc = IORegister.PortC (  );

            GpioPin button = new GpioPin(portc, 13);
            GpioPin led = new GpioPin(port, 5);

            ProgramTest test = new ProgramTest(led);

            bool isAn = false;
            bool isDown = false;
            while (true)
            {
                if (!button.Read())
                {
                    if (!isDown)
                    {
                        isAn = !isAn;
                    }

                    isDown = true;
                }
                else
                {
                    isDown = false;
                }

                if (isAn)
                {
                    test.An();

                    continue;
                }

                test.Aus();
            }

            return 0;
        }

        #region ctor

        public this new (GpioPin pin)
        {
            this.PinArt = pin;

            return this;
        }

        public this ~()
        {

        }

        #endregion ctor

        #region methods

        public bool An()
        {
            this.PinArt.Write ( IOValue.High );
        }
        public bool Aus()
        {
            this.PinArt.Write ( IOValue.Low );
        }

        #endregion methods

    }

}