namespace "Program"
{
    using "System";
    using "System.IO";
    using "System.Time";
    using "ARM.CortexM";

    public class ProgramTest
    {

        #region get/set

        private Gpio PinArt;
        private int propValue;

        public Gpio PortArt
        {
            get
            {
                return this.propValue;
            }
            set
            {
                this.propValue = invalue;
            }
        }

        #endregion get/set

        static int main()
        {
            Gpio port = IORegister.PortA();

            port.InitPort ( 2, IORegisterMode.Write );
            //port.InitPort ( 1, IORegisterMode.Analog );

            ProgramTest test = new ProgramTest(port, 2);

            //IORegister.InitAdc();
            //int adcReg = IORegister.Adc1StartRegister();

            while (true)
            {
                //int value = IORegister.ReadAnalog(adcReg, 1);

                //bool isAn = value > 0x0cff;//IORegister.Read ( port, 1 );

                test.An();

                Wait.InSeconds(1);

                test.Aus();

                Wait.InSeconds(1);
            }

            return 0;
        }

        #region ctor

        public this new (int port, int pin)
        {
            //IORegister.InitPort ( port, pin, IORegisterMode.Write );

            this.PortArt = port;
            this.PinArt = pin;

            return this;
        }

        public this ~()
        {

        }

        #endregion ctor

        #region methods

        public bool An()
        {
            IORegister.Write ( this.PortArt, this.PinArt, IOValue.High );
        }
        public bool Aus()
        {
            IORegister.Write ( this.PortArt, this.PinArt, IOValue.Low );
        }

        #endregion methods

    }

}